version: "3.4"

services:

  vdm_training_03_messenger:
    container_name: 'vdm_training_03_messenger'
    working_dir: '/var/www/html'
    build:
      context: './'
      dockerfile: './Dockerfile'
    command: ["/bin/sh", "-c", "COMPOSER_MEMORY_LIMIT=-1 composer update -n && composer clearcache -n && chmod 777 -R vendor/ composer.lock && sleep 10000000"]
    ports:
      - '5000:80'
    volumes:
      - '.:/var/www/html'
    depends_on:
      - 'vdm_training_03_rabbitmq'
      - 'vdm_training_03_kafka'

  vdm_training_03_rabbitmq:
    image: rabbitmq:3-management
    container_name: vdm_training_03_rabbitmq
    ports: ["15672:15672"]

  ###############
  ### STORAGE ###
  ###############
  vdm_training_03_zookeeper:
    image: confluentinc/cp-zookeeper:6.1.1
    container_name: vdm_training_03_zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

  vdm_training_03_kafka:
    image: confluentinc/cp-kafka:6.1.1
    container_name: vdm_training_03_kafka
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: vdm_training_03_zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://vdm_training_03_kafka:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    depends_on:
      - vdm_training_03_zookeeper